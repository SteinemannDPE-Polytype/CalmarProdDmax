<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_PrintPositionDmax" Id="{0c33b757-4f12-48d1-b71a-f8c104332bd2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PrintPositionDmax EXTENDS FB_BasePrint IMPLEMENTS I_PrintPosition, I_Sim
VAR_INPUT
  IlEncoderPulse      AT%I* : UDINT;                // Encoder counter intput
  IbEncoderWcState    AT%I* : BOOL;                 // Encoder EL5101 WcState
END_VAR
// ----------------------------------
// configuration
VAR
  // configuration (init)
  _fPrintResolution         : LREAL := 600;         // print(head) resolution in [dpi]
  _fSubPxResolution         : LREAL := 32;          // SubPixel resolution [SubPx], resolution factor (fI_PrintResolution*fI_SubPxResolution=>Output resolution)
  _fTaskCycleTime           : LREAL := 0.002;       // Task cycle time in [s]
  
  _fSpeedMpMin              : LREAL;                // speed in [m/min]
  
  // Debug
  // Machine simulation mode
  nSimMode : UINT := 0;   // 0=standard sim PosMaster, 1=ramp up/down 
  fSimSpeed : LREAL := 0.1;   // [m/s]
  bCmdStartPos, bCmdStopPos : BOOL;                 // test command to start/stop simulated the machine
END_VAR
VAR PERSISTENT
  // config - values changable during runtime (recipe, visu, property)
  // - encoder settings 
  _fEncoderResolution       : LREAL := 2.00475;     // Encoder resolution
  // - speed compensation
  _bEnSpeedComp             : BOOL  := FALSE;
  _fSpeedCompFactor         : LREAL := 0.0;         // TODO: define value
  _fSpeedCompRefSpeed       : LREAL := 0.0;         // TODO: define value
END_VAR

// ---------------------------------
// internal variables
VAR
  // fb inst
  fbPositionMaster          : FB_PositionMaster;

  // internal vars
  _bMoving                  : BOOL;
  
  _bStarted                 : BOOL;
  fEncoderReso              : LREAL;                // used encoder resolution (config + speedcomp)
  rTrigMoving               : R_TRIG;
  // simulation
  _bSim                     : BOOL;
  rfTrig_Sim                : RF_TRIG;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// set internal used resolution
fEncoderReso := _fEncoderResolution;  

// compensate resolution (if enabled)
IF _bEnSpeedComp THEN
  fEncoderReso := F_EncoderSpeedComp(   
    fMasterSpeed:=fbPositionMaster.fMasterSpeed,
    fResolution:=_fEncoderResolution,
    fSpeedCompFactor:=_fSpeedCompFactor,
    fSpeedCompRefSpeed:=_fSpeedCompRefSpeed
  );
END_IF

// calc position / speed
fbPositionMaster(fResolutionInput:=fEncoderReso, lPosReference:=IlEncoderPulse);

// position status
_bMoving := ABS(fbPositionMaster.fMasterSpeed) >= fbPositionMaster.fMinSpeed; 
_fSpeedMpMin := fbPositionMaster.fMasterSpeed * 60;
rTrigMoving(CLK:=bMoving);   // create started trigger output
_bStarted := rTrigMoving.Q OR fbPositionMaster.bSyncReq;

// simulation
simulation();]]></ST>
    </Implementation>
    <Folder Name="I_PrintPosition" Id="{3f5d164d-302f-4982-b03c-080e55e1e09d}" />
    <Folder Name="I_Sim" Id="{0751e001-913d-4ab2-9b32-7d45887037a3}" />
    <Property Name="bMoving" Id="{7a8063a6-fbac-45f0-bb5e-fc9645c77f91}" FolderPath="I_PrintPosition\">
      <Declaration><![CDATA[(*
  Position is moving.
*)
PROPERTY bMoving : BOOL]]></Declaration>
      <Get Name="Get" Id="{d7636e36-8591-46e7-bd9d-577c4637ca09}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bMoving := _bMoving;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bSimEnable" Id="{d49f8e35-badf-45e2-b8bf-03a13aa49665}" FolderPath="I_Sim\">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
(*Simulation is enabled set/get*)
PROPERTY bSimEnable : BOOL
]]></Declaration>
      <Get Name="Get" Id="{219d6f5b-7fba-45e7-a94d-c8bb5241fcac}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bSimEnable := _bSim;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{94486a69-39aa-4e9e-9031-cac96a30529f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_bSim := bSimEnable;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="bStarted" Id="{4290f2ea-42e9-4ec4-a58e-522649a213bc}" FolderPath="I_PrintPosition\">
      <Declaration><![CDATA[(*
  Started moving event.
*)
PROPERTY bStarted : BOOL]]></Declaration>
      <Get Name="Get" Id="{0b7acd4e-93af-41bf-822c-434df041196e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bStarted := _bStarted;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="fEnoderResolution" Id="{2e9830b2-05f0-470b-9c4c-1af33ab5e30d}" FolderPath="I_PrintPosition\">
      <Declaration><![CDATA[(*
  Read / Write Encoder resolution.
*)
PROPERTY fEnoderResolution : LREAL]]></Declaration>
      <Get Name="Get" Id="{ee7ac5f7-4ff9-499a-ba4d-5e8064eedc9d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fEnoderResolution := _fEncoderResolution;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{77e18f5f-19e6-4d22-8a5a-e490d88c3550}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fEncoderResolution := fEnoderResolution;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fPrintResolution" Id="{b9e728b0-7318-437c-8c43-21f368ca88a9}" FolderPath="I_PrintPosition\">
      <Declaration><![CDATA[(*
  print(head) resolution in [dpi]
*)
PROPERTY fPrintResolution : LREAL
]]></Declaration>
      <Get Name="Get" Id="{a5be8d5b-21e5-49a7-809d-42269edc8e4b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fPrintResolution := _fPrintResolution;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="fSubPxResolution" Id="{a090979f-2cc2-4113-9f71-33654ee80321}" FolderPath="I_PrintPosition\">
      <Declaration><![CDATA[(*
   SubPixel resolution [SubPx]
*)
PROPERTY fSubPxResolution : LREAL
]]></Declaration>
      <Get Name="Get" Id="{64e7964f-e4a5-4adb-9f68-64f28ff05764}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fSubPxResolution := _fSubPxResolution;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="getPosition" Id="{6c60b518-7e33-4ab5-92be-75459f96ec3a}" FolderPath="I_PrintPosition\">
      <Declaration><![CDATA[(*
  Get current "default" position.
  [SubPx] as return value and [um] as output
  :return: position in [SubPx] resolution
*)
METHOD getPosition : DINT
VAR_OUTPUT
  nPosition_px       : DINT;                 // Master position in [px]
  fPosition_um       : LREAL;                // Master position in [um]
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[getPosition := fbPositionMaster.lMasterPosition;
nPosition_px := fbPositionMaster.lMasterPosition / LREAL_TO_DINT(_fSubPxResolution);
fPosition_um := fbPositionMaster.fMasterPosition;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getSpeed" Id="{cbc425e9-c4e9-4966-b4a3-dc2419da353c}" FolderPath="I_PrintPosition\">
      <Declaration><![CDATA[(*
  Get "default" speed [m/s].
  :returns: current speed in [m/s]
*)
METHOD getSpeed : LREAL
VAR_OUTPUT
  fSpeedMpMin : LREAL;  // speed in [m/min]
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[getSpeed    := fbPositionMaster.fMasterSpeed;
fSpeedMpMin := fbPositionMaster.fMasterSpeed*60;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{247234a8-392e-4b62-9cf9-9baea0ceb8d2}">
      <Declaration><![CDATA[METHOD Init : BOOL
VAR_INPUT
  fPrintResolution    : LREAL := 600;         // print(head) resolution in [dpi]
  fSubPxResolution    : LREAL := 32;          // SubPixel resolution [SubPx], resolution factor (fI_PrintResolution*fI_SubPxResolution=>Output resolution)
  fTaskCycleTime      : LREAL;                // Task cycle time in [s]
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// store config
_fPrintResolution := fPrintResolution;
_fSubPxResolution := fSubPxResolution;
_fTaskCycleTime   := fTaskCycleTime;

// init fbs
// - position master
fbPositionMaster.init(
  fI_PrintResolution:=fPrintResolution, 
  fI_SubPxResolution:=fSubPxResolution, 
  fI_TaskCycleTime:=fTaskCycleTime, 
  bI_HWEncoder:=FALSE
);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{b4a56331-55e1-48a0-9f2d-01444b8ec17f}">
      <Declaration><![CDATA[METHOD reset
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// reset positioning system
fbPositionMaster.reset();]]></ST>
      </Implementation>
    </Method>
    <Method Name="simulation" Id="{b9a94fb5-cce8-4617-bcc7-a0f9952284fe}">
      <Declaration><![CDATA[METHOD simulation
VAR_INST
  rf_Start, rf_Stop : RF_TRIG;
  fSetSpeed : LREAL;          // [m/s] current sim set speed
  fRampUpTime : LREAL := 2;   // [s] to ramp up/down machine
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[rfTrig_Sim(CLK:=_bSim);
IF rfTrig_Sim.RT THEN fbPositionMaster.bSim:=TRUE; END_IF
IF rfTrig_Sim.FT THEN fbPositionMaster.bSim:=FALSE; END_IF
fbPositionMaster.fSimSpeed := fSimSpeed;


rf_Start(CLK:=bCmdStartPos);
rf_Stop(CLK:=bCmdStopPos);

IF    nSimMode = 0 THEN
  ; // just use running position with sim speed in PositionMaster

ELSIF nSimMode = 1 THEN
  IF fRampUpTime = 0 THEN RETURN; END_IF
  IF rf_Start.RT THEN fSetSpeed := 0; END_IF  
  // starting
  IF bCmdStartPos THEN
    fSetSpeed := fSetSpeed + (fSimSpeed/fRampUpTime)*_fTaskCycleTime;
    IF fSetSpeed >= fSimSpeed THEN bCmdStartPos:=FALSE; fSetSpeed := fSimSpeed; END_IF
  END_IF
  // stopping
  IF bCmdStopPos THEN
    fSetSpeed := fSetSpeed - (fSimSpeed/fRampUpTime)*_fTaskCycleTime;
    IF fSetSpeed <= 0 THEN bCmdStartPos:=FALSE; fSetSpeed := 0; END_IF
  END_IF
  
ELSIF nSimMode = 2 THEN
  // sim encoder signal (if not fbPositionMaster is used)
  IF _bSim THEN // sim encoder pulse
    IlEncoderPulse := TO_UDINT(TO_DINT(IlEncoderPulse) + TO_DINT(((fbPositionMaster.fSimSpeed * _fTaskCycleTime)*1_000_000)/SEL(_fEncoderResolution=0, _fEncoderResolution, 1)));
  END_IF
  
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_PrintPositionDmax">
      <LineId Id="423" Count="0" />
      <LineId Id="324" Count="14" />
      <LineId Id="382" Count="0" />
      <LineId Id="339" Count="4" />
      <LineId Id="559" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="561" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.bMoving.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.bSimEnable.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.bSimEnable.Set">
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.bStarted.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.fEnoderResolution.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.fEnoderResolution.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.fPrintResolution.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.fSubPxResolution.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.getPosition">
      <LineId Id="5" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="41" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.getSpeed">
      <LineId Id="5" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.Init">
      <LineId Id="39" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="24" Count="4" />
      <LineId Id="49" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.reset">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_PrintPositionDmax.simulation">
      <LineId Id="12" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="57" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="42" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="47" Count="1" />
      <LineId Id="46" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="27" Count="3" />
      <LineId Id="15" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>