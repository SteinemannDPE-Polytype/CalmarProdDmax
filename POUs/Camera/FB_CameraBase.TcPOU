<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="FB_CameraBase" Id="{484ed993-7aea-449c-8988-777e097fbb7c}" SpecialFunc="None">
    <Declaration><![CDATA[(*
  Base camera system
  Implements I_Camera: set I_CameraSink.   
*)
FUNCTION_BLOCK ABSTRACT FB_CameraBase EXTENDS FB_Commons IMPLEMENTS I_Camera, I_CameraTriggerDevice

VAR
  _bInitialized             : BOOL;
  _iCameraSink              : I_CameraSink;
  _iCameraTrigger           : I_CameraTrigger;
  _bSimulate                : BOOL;
  _nPrintUnitResolution     : UDINT;           (*printhead pixel resolution [dpi]*)
  _nPrintUnitSubPx          : UDINT;           (*print unit SubPixel resolution [SubPx]*)
  _bUseCameraTrigger        : BOOL;            (*use a trigger output timestamp I/O*)
  _bUseCameraTriggerFeedback : BOOL;           (*use a camera triggered feedback timestamp I/O*)
  _eCameraMode              : E_CameraMode;    (*desired camera mode*)
  _ePossibleMode            : E_CameraMode;    (*currently possible mode*)
  _fSubstrateLength         : LREAL := 1;      (*Substrate length [m]*)
  _fSubstrateWidth          : LREAL := 1;      (*Substrate width [m]*)
  _fImageLength             : LREAL := 1;      (*Image length [m]*)
  _fImageWidth              : LREAL := 1;      (*Image width [m]*)
  _fFrameLength             : LREAL := 1;      (*Camera Frame width in [px]*)
  _bActivated               : BOOL;
  _sVisuName                : STRING := 'unvailable';     (*detail visualisation instance name*)
  _nRxCamPoints             : UDINT;                      (*number of received cam points*)
  stCamPoint                : ST_DeformationPointAccurate;(*actual camera point*)
  
  _bCamTriggerOk            : BOOL;
  _bCamStarted              : BOOL;
  _bCamDone                 : BOOL;   
  _nCamStartPos             : DINT;    //Cam start position ideal [SubPx]
  _nCamStartPosDeviation    : DINT;    //Cam stated position real [SubPx]
  
  // messaging
  _pMsgConfig               : POINTER TO CalmarCommons.ST_MSG_CONFIG;
END_VAR

VAR PERSISTENT
  _fTriggerDistance         : LREAL;           (*Distance between Sensor and Trigger [m]*)
  _fTriggerPulseLength      : LREAL := 10;     (*Length of trigger signal in ms, min. 3 bus cycles*)
  _fDetectToCameraOffset    : LREAL := 0.1;    (*Distance between innput trigger and camera, mech.*)
  _fCameraToPrintOffset     : LREAL := 0.0;    (*Distance between Camera and PU, mech, This offset can be used to shift the reference of a camera/sheet-detect, e.g. because this reference is different from to one where the alignment Camera/sheetdetect-PrintUnit has been made*)
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="ActivateCam" Id="{e847224c-0022-43ce-b368-4855714fcc0c}">
      <Declaration><![CDATA[METHOD ActivateCam : BOOL
VAR_INPUT
  iCameraSink : I_CameraSink;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iCameraSink = 0 THEN
  LogError('Invalid parameter (0 pointer)');
  ActivateCam := FALSE;
  RETURN; 
ELSIF _iCameraSink <> 0 AND iCameraSink <>_iCameraSink THEN
  LogError('SetSink failed: other sink already exists');
  ActivateCam := FALSE;
  RETURN; 
END_IF 

_iCameraSink := iCameraSink;
_iCameraTrigger.Enable(iCam := THIS^,bUseCameraTrigger:= _bUseCameraTrigger, bUseCameraTriggerFeedback:=_bUseCameraTriggerFeedback);

_bActivated := TRUE;
ActivateCam:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="bEnableTrigger" Id="{26714317-df55-4926-95ca-e8d277e6a9f4}">
      <Declaration><![CDATA[(*
  Activate/Deactivate camera trigger device
*)
PROPERTY bEnableTrigger : BOOL
]]></Declaration>
      <Set Name="Set" Id="{71545a42-507c-4010-a44b-2af7d6ec7ab1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF bEnableTrigger THEN
  _iCameraTrigger.Enable(iCam := THIS^, bUseCameraTrigger:= _bUseCameraTrigger, bUseCameraTriggerFeedback:=_bUseCameraTriggerFeedback);
ELSE
  _iCameraTrigger.Disable();
END_IF]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="bManualTeach" Id="{7c1a0e8e-c614-4379-bba3-244c737d9b61}">
      <Declaration><![CDATA[(*
  Activate/Deactivate camera manual teach mode
*)
PROPERTY bManualTeach : BOOL
]]></Declaration>
      <Set Name="Set" Id="{4c52ff0d-ffde-43a5-806a-9464789b6fa0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_iCameraTrigger.bManualTeach := bManualTeach;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="bSimulate" Id="{d4820fc1-ed9d-464e-80c6-eee254d40168}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY bSimulate : BOOL]]></Declaration>
      <Get Name="Get" Id="{38619303-c217-4e7d-b79e-7fac24a44719}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bSimulate := _bSimulate;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{fbd6b5ab-08b4-4f62-a0ad-b03e1ee0d1be}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_bSimulate := bSimulate;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="CamTrigger" Id="{42261f93-e978-469f-9dd2-7f31b656b223}">
      <Declaration><![CDATA[METHOD CamTrigger
VAR_INPUT
  bOk             : BOOL;     // trigger is ok
	nPos            : DINT;     // camera triggered position
  nPosDeviation   : DINT;     // camera started deviation
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_nRxCamPoints := 0;
_bCamStarted    := TRUE;
_bCamDone       := FALSE;
_bCamTriggerOk  := bOk;
_nCamStartPos   := nPos;
_nCamStartPosDeviation := nPosDeviation;

IF _iCameraSink <> 0 THEN   // link to sink (wokerCam -> CT)
  ;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="CamTriggerDone" Id="{64c1da17-4b35-43a3-b060-9ad844c6ae65}">
      <Declaration><![CDATA[METHOD CamTriggerDone
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_bCamStarted    := FALSE;  // this call marks the end of the camera trigger period
_bCamDone       := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="DeactivateCam" Id="{925d77c2-f95c-4f3d-a4ef-64648960cc56}">
      <Declaration><![CDATA[METHOD DeactivateCam : BOOL
VAR_INPUT
  iSink : I_CameraSink;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _iCameraSink <> 0 AND iSink <> _iCameraSink THEN
  LogError('remove sink failed: inconsistent');
  DeactivateCam := FALSE;
  RETURN;  
END_IF

_iCameraSink := 0;
_iCameraTrigger.Disable();
_bActivated := FALSE;
DeactivateCam:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="eCameraMode" Id="{b13f5b24-e0b7-48dd-97dd-ad6fa7e18f64}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY ABSTRACT eCameraMode : E_CameraMode
]]></Declaration>
      <Get Name="Get" Id="{2c312843-8d5b-482a-9c83-bd1bdd0999e0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="eDeviceType" Id="{94438f1e-950c-467e-8969-b0c0d5a5f856}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY ABSTRACT eDeviceType : E_CameraDevice]]></Declaration>
      <Get Name="Get" Id="{06377dc2-6bfa-4388-8a9e-9bcbd62af831}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="fCameraToPrintOffset" Id="{093fd995-ed0b-4047-aa59-b89332069d30}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY fCameraToPrintOffset : LREAL
]]></Declaration>
      <Get Name="Get" Id="{8ee24d4f-0fab-4aec-bb70-683f0e6fdb78}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[//This offset can be used to shift the reference of a camera, e.g. because this reference is different from to one where the alignment Camera-PrintUnit has been made
fCameraToPrintOffset := _fCameraToPrintOffset;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{763d1dcf-b230-441d-be7d-93610dfaea41}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fCameraToPrintOffset := fCameraToPrintOffset;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fDetectToCameraOffset" Id="{c3ef6c91-7f21-478d-9985-2a721dd9979b}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY fDetectToCameraOffset : LREAL
]]></Declaration>
      <Get Name="Get" Id="{fbb051dc-3e60-4957-a891-17005f99ce6f}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[//This offset can be used to shift the reference of a camera, e.g. because this reference is different from to one where the alignment Camera-PrintUnit has been made
fDetectToCameraOffset := _fDetectToCameraOffset;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{8111f578-f7b5-4695-87cd-ac5b7998e7cd}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fDetectToCameraOffset := fDetectToCameraOffset;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fFrameLength" Id="{2fe04168-73eb-400e-9296-7718ae9f89f9}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
(* camera frame size in [px]*)
PROPERTY fFrameLength : LREAL
]]></Declaration>
      <Get Name="Get" Id="{e75e4fb9-0624-4cb2-9591-13fb0dea9607}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fFrameLength := _fFrameLength;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{fcbedb1b-8417-42d9-8178-0d96c0ed5e77}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fFrameLength := fFrameLength;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fImageLength" Id="{e37bb5ee-3065-4a07-876d-1955a6190a4c}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
(*Image Length/Depth in [m]*)
PROPERTY fImageLength : LREAL
]]></Declaration>
      <Get Name="Get" Id="{79bce027-86cf-4668-a756-af0c31abec21}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fImageLength := _fImageLength;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{338fc4be-632a-4746-ac96-467b1e71a90e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fImageLength := fImageLength;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fImageWidth" Id="{09d6d256-6435-4243-8305-b72f057cdfe5}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
(*Image Width in [m]*)
PROPERTY fImageWidth : LREAL
]]></Declaration>
      <Get Name="Get" Id="{7a6663f4-cb8d-4a12-b0db-930f57ab1d63}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fImageWidth := _fImageWidth;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{ebfa97bf-e36e-4c70-a87b-13c1cdc2794e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fImageWidth := fImageWidth;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fSubstrateLength" Id="{39d153bb-814c-429f-938c-0b96b9603b8b}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
(*Substrate Length/Depth in [m]*)
PROPERTY fSubstrateLength : LREAL
]]></Declaration>
      <Get Name="Get" Id="{ecc44cd6-f328-4fb0-bcff-3a6a6e7bb9ed}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fSubstrateLength := _fSubstrateLength;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{e2925e44-fa5a-4283-8bb7-8311068c3698}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[//ROI in Print direction
IF _iCameraTrigger <> 0 THEN
  _iCameraTrigger.SetSubstrateLength(fSubstrateLength := fSubstrateLength);   // save to camera trigger
  _fSubstrateLength := fSubstrateLength;                                      // save to camera
END_IF]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fSubstrateWidth" Id="{490a4387-df1e-483d-a915-be97914a0a12}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
(*Substrate Width in [m]*)
PROPERTY fSubstrateWidth : LREAL
]]></Declaration>
      <Get Name="Get" Id="{6278d786-89e3-49db-886a-4543ba2f5070}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fSubstrateWidth := _fSubstrateWidth;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{ec4eda75-b3a1-4038-80d8-8830e633b225}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fSubstrateWidth := fSubstrateWidth;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fTriggerDistance" Id="{f65a3627-7304-49e3-921f-3161a7b67530}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY fTriggerDistance : LREAL
]]></Declaration>
      <Get Name="Get" Id="{0ff07811-262e-43d1-b963-3df0600f9e55}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fTriggerDistance := _fTriggerDistance;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{72254900-a7b6-48a8-a8e1-245044b91966}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fTriggerDistance := fTriggerDistance;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="fTriggerPulseLength" Id="{5efe63ba-d1b7-4c49-b79b-6cfc9d271b93}">
      <Declaration><![CDATA[PROPERTY fTriggerPulseLength : LREAL
]]></Declaration>
      <Get Name="Get" Id="{b94ca0d1-d3c4-4849-94e1-ff9e65038505}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fTriggerPulseLength := _fTriggerPulseLength;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="GetCamState" Id="{17117628-5115-49f0-8f45-ad0bb105b7ac}">
      <Declaration><![CDATA[METHOD ABSTRACT GetCamState : BOOL
VAR_OUTPUT
  bCamModeNotSupported  : BOOL;   // desired camera mode not supported
  bCam
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetCamStatus" Id="{2f1b9c70-d6ea-4216-8ad6-ef84259fa168}">
      <Declaration><![CDATA[METHOD ABSTRACT GetCamStatus : BOOL
VAR_OUTPUT
  bConnectionOK  : BOOL;    // Camera connected
  bTeachOk       : BOOL;    // Teach successful
  nTeachedPoints : UDINT;   // Teached points for this job
  nScannedPoints : UDINT;   // Scanned points on current sheet  
  bCamStarted    : BOOL;    // Camera trigger is active, cam started
  bCamDone       : BOOL;    // Camera finished on last CT
  bErrors        : ARRAY[1..GVL_Camera.nC_NbCamErrors] OF BOOL;  // generic error flag list
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{7a74c0b9-9e9e-4d88-9483-cf9903fb3814}">
      <Declaration><![CDATA[METHOD Init
VAR_INPUT
  nPrintUnitResolution         : UDINT;    (*printhead pixel resolution [dpi]*)
  nPrintUnitSubPx              : UDINT;    (*print unit subPixel resolution [SubPx]*)
  iCameraTrigger               : I_CameraTrigger;
  bUseCameraTrigger            : BOOL;     (*use a trigger output timestamp I/O*)
  bUseCameraTriggerFeedback    : BOOL;     (*use a camera triggered feedback timestamp I/O*)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF nPrintUnitResolution <> 0 AND iCameraTrigger <> 0 THEN
  _nPrintUnitResolution := nPrintUnitResolution;
  _nPrintUnitSubPx      := nPrintUnitSubPx;
  _iCameraTrigger       := iCameraTrigger;
  
  _bUseCameraTrigger := bUseCameraTrigger;
  _bUseCameraTriggerFeedback := bUseCameraTriggerFeedback;
  
  _bInitialized := TRUE;
ELSE
  _bInitialized := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="mJobStart" Id="{21a24940-50c3-4289-8331-b554488b8e7f}">
      <Declaration><![CDATA[METHOD mJobStart : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="setCameraMode" Id="{f64e889a-3cd6-467f-aad2-c7d8acb483a7}">
      <Declaration><![CDATA[(*
  Set mode to camera.
  :return: TRUE if success
*)
METHOD ABSTRACT setCameraMode : BOOL
VAR_INPUT
  eCameraMode : E_CameraMode;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="setMsgInterface" Id="{7dd5c4d3-99b2-4cc8-98b5-88572882d484}">
      <Declaration><![CDATA[METHOD setMsgInterface : BOOL
VAR_INPUT
	pMsgConfig	: POINTER TO CalmarCommons.ST_MSG_CONFIG;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_pMsgConfig := pMsgConfig;]]></ST>
      </Implementation>
    </Method>
    <Property Name="sName" Id="{b16fccb6-779e-42b9-bde6-87fe58d4f1e1}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY sName : STRING
]]></Declaration>
      <Get Name="Get" Id="{a6f60ccd-169f-456f-aae0-4ff0b379c6be}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sName := 'undefined';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="sVisuName" Id="{b120037b-3d94-4baa-bd12-ddb399b9e512}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY sVisuName : STRING]]></Declaration>
      <Get Name="Get" Id="{4e8511df-8759-4687-aad0-92498953e579}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sVisuName := _sVisuName;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{3bdd9c08-3ac1-46df-9f4f-63b614ba4637}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_sVisuName := sVisuName;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="FB_CameraBase">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.ActivateCam">
      <LineId Id="10" Count="1" />
      <LineId Id="19" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="24" Count="1" />
      <LineId Id="22" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="4" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="20" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.bEnableTrigger.Set">
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="8" Count="1" />
    </LineIds>
    <LineIds Name="FB_CameraBase.bManualTeach.Set">
      <LineId Id="9" Count="1" />
    </LineIds>
    <LineIds Name="FB_CameraBase.bSimulate.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.bSimulate.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.CamTrigger">
      <LineId Id="21" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="32" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.CamTriggerDone">
      <LineId Id="4" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.DeactivateCam">
      <LineId Id="7" Count="7" />
      <LineId Id="20" Count="0" />
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.eCameraMode.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.eDeviceType.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fCameraToPrintOffset.Get">
      <LineId Id="6" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fCameraToPrintOffset.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fDetectToCameraOffset.Get">
      <LineId Id="6" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fDetectToCameraOffset.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fFrameLength.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fFrameLength.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fImageLength.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fImageLength.Set">
      <LineId Id="6" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fImageWidth.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fImageWidth.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fSubstrateLength.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fSubstrateLength.Set">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fSubstrateWidth.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fSubstrateWidth.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fTriggerDistance.Get">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fTriggerDistance.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.fTriggerPulseLength.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.GetCamState">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.GetCamStatus">
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.Init">
      <LineId Id="25" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="34" Count="1" />
      <LineId Id="64" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="26" Count="2" />
    </LineIds>
    <LineIds Name="FB_CameraBase.mJobStart">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.setCameraMode">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.setMsgInterface">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.sName.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.sVisuName.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CameraBase.sVisuName.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>