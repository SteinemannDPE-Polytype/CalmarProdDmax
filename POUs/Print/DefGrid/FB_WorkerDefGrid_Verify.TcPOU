<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_WorkerDefGrid_Verify" Id="{ba30a803-cb22-4c70-92de-a30f80d703f5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_WorkerDefGrid_Verify EXTENDS FB_WorkerDefGrid
VAR_OUTPUT
  bWateGateActive   AT%Q* : BOOL;     //  wate gate activation pulse
END_VAR
VAR
  bLastEject   : BOOL;   // stores state if last CT TRUE:=Eject, FALSE:=OK
  tpEjectPulse  : TP := (PT:=T#80MS);
  
  // print manager reference
  _pPm : POINTER TO FB_ProdManager_DMAX;
  
  // view verify history
  tpShowResult : TP := (PT:=T#700MS);
  nStateHistory : ARRAY[1..20] OF UINT;   // 2=???, 1=Eject, 0=OK
  nStateHistory_FillColor : ARRAY[1..20] OF UDINT;
  sResultText : STRING;
  
  // Grid Table export
  nCTId : DINT;
  bEnableGridExport : BOOL;
  nExportWrites : UDINT;
  sOutputPath : T_MaxString := 'C:\GridExport';
  sFileFormat : STRING := 'json';
  fbGridExporter : FB_GridDataExporter;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
]]></ST>
    </Implementation>
    <Folder Name="I_PrintStatusClient" Id="{23849181-f341-4a97-883d-05a0394fe9c7}" />
    <Method Name="Attach" Id="{ed09302e-2885-443a-873e-e5493c07daba}">
      <Declaration><![CDATA[METHOD PROTECTED  Attach : BOOL
VAR_INPUT
  iCT              : I_CT;                         (*container at triggered event position*)
END_VAR
VAR 
  bSuccess         : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF SUPER^.Attach(iCT:=iCT) THEN
  
  // do CT supervision here and decice what happens with this sheet
   bSuccess := TRUE;
  IF NOT iCT.bValid AND iCT.bProductPresent AND iCT.pJob <> 0 THEN
    bSuccess := FALSE;
    // tag for ejection
    iCT.pCT^.lPrOutput := EN_PrinterOutput.trash;
	END_IF

  // finish CT in production
  IF _pPm <> 0 THEN 
    _pPm^.CT_Finish(sCT:=iCT, bSuccess:=bSuccess);      // report to job status
  ELSE
    LogError('PrintManager not set');
	END_IF
  
  // select output
  IF iCT.pCT^.lPrOutput = EN_PrinterOutput.trash THEN
    // create eject trigger
    tpEjectPulse(IN:=TRUE);
    bLastEject := TRUE;
    LogLvl(Lvl:=E_LogSeverity.Debug, Msg:=F_Concat2('Eject CT: ', _pAttachedCt^.print(0)));
  ELSE
    tpEjectPulse(IN:=FALSE);
    bLastEject := FALSE;
	END_IF
  
  // History view
  MEMMOVE(destAddr:=ADR(nStateHistory[1+1]),           srcAddr:=ADR(nStateHistory[1]),           n:=((SIZEOF(nStateHistory)/SIZEOF(nStateHistory[1]))-1)*SIZEOF(nStateHistory[1]));
  MEMMOVE(destAddr:=ADR(nStateHistory_FillColor[1+1]), srcAddr:=ADR(nStateHistory_FillColor[1]), n:=((SIZEOF(nStateHistory_FillColor)/SIZEOF(nStateHistory_FillColor[1]))-1)*SIZEOF(nStateHistory_FillColor[1]));
  
  nStateHistory[1] := SEL(bLastEject=TRUE, 0, 1);
  sResultText := SEL(bLastEject=TRUE, 'OK', 'NOK');

  IF iCT.bProductPresent AND iCT.bValid THEN        nStateHistory_FillColor[1] := 16#FF000000 OR WebColors.LightGreen.lCode;
  ELSIF iCT.bProductPresent AND NOT iCT.bValid AND iCT.pCT^.lPrOutput = EN_PrinterOutput.trash THEN nStateHistory_FillColor[1] := 16#FF000000 OR WebColors.LightSalmon.lCode;   
  ELSIF iCT.bProductPresent AND NOT iCT.bValid AND iCT.pCT^.lPrOutput <> EN_PrinterOutput.trash THEN nStateHistory_FillColor[1] := 16#FF000000 OR WebColors.LightGray.lCode;
	ELSIF NOT iCT.bProductPresent THEN                nStateHistory_FillColor[1] := 16#FF000000 OR WebColors.LightGray.lCode;
  END_IF

  tpShowResult(IN:=FALSE);
  tpShowResult(IN:=TRUE);
  
  // grid history
  IF bEnableGridExport AND iCT.bProductPresent AND nExportWrites < 100 THEN
    nCTId := _pAttachedCt^.pCT^.iId;
    sFileFormat := SEL(sFileFormat='csv', 'json', 'csv');
    fbGridExporter(
        sOutputDir:=sOutputPath,
        sFileName:=F_Concat4('\Export_', TO_STRING(nCTId), '.', sFileFormat),
        pFbImageDeformation:=_pAttachedCt^.pImageDeformation,
        //nSelectGrid:=
    );
    fbGridExporter.startExport();
    nExportWrites:=nExportWrites+1;
  ELSE
    nExportWrites := 0; bEnableGridExport := FALSE;
  END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="InitWorkerVerify" Id="{b89f6ac4-9ac9-4bfe-8bb7-e25e99bfe006}">
      <Declaration><![CDATA[(*
  Set PrintManager.
*)
METHOD InitWorkerVerify : BOOL
VAR_INPUT
  pPm : POINTER TO FB_ProdManager_DMAX;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF pPm = 0 THEN LogError('Invalid Pm given'); END_IF

_pPm := pPm;  // register print manager reference]]></ST>
      </Implementation>
    </Method>
    <Method Name="mJobStart" Id="{a3da76c1-e8dd-4ffa-be59-c4c0dd030a9a}" FolderPath="I_PrintStatusClient\">
      <Declaration><![CDATA[METHOD   mJobStart
VAR_INPUT
	sJobDef	: CalmarCompPrint.I_JobDefinition;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="mJobStop" Id="{29b4b42c-fe9c-4710-b09b-abd55ea27d44}" FolderPath="I_PrintStatusClient\">
      <Declaration><![CDATA[METHOD  mJobStop
VAR_INPUT
	sStatus	: CalmarCompPrint.I_JobStatus;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Release" Id="{c5bbf20b-0ff6-499b-bfe5-090aa809106f}">
      <Declaration><![CDATA[METHOD Release : BOOL
VAR_INPUT
  iCT              : I_CT;                         (*container at triggered event position*)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF SUPER^.Release(iCT := iCT) THEN
  ;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="work" Id="{f3293130-827d-4f71-beb2-d681c617967b}">
      <Declaration><![CDATA[METHOD  work
VAR_INST
  fT_Pulse  : F_TRIG;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.work();

// output signal handling
tpEjectPulse(Q=>bWateGateActive);
fT_Pulse(CLK:=bWateGateActive);
tpShowResult();
//IF tpShowResult.IN:=TRUE AND NOT tpShowResult.Q THEN tpShowResult(IN:=FALSE); END_IF   // reset pulse

fbGridExporter();

// release
IF tpEjectPulse.IN THEN
  IF fT_Pulse.Q THEN  
    tpEjectPulse(IN:=FALSE);
  END_IF
END_IF

IF _pAttachedCt <> 0 THEN   // just release any attached container in this cycle
  Release(iCT:=_pAttachedCt^);
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_WorkerDefGrid_Verify">
      <LineId Id="23" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Verify.Attach">
      <LineId Id="6" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="60" Count="1" />
      <LineId Id="36" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="79" Count="2" />
      <LineId Id="85" Count="0" />
      <LineId Id="82" Count="2" />
      <LineId Id="42" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="110" Count="1" />
      <LineId Id="98" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="96" Count="1" />
      <LineId Id="127" Count="1" />
      <LineId Id="156" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="182" Count="3" />
      <LineId Id="180" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="160" Count="1" />
      <LineId Id="157" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Verify.InitWorkerVerify">
      <LineId Id="5" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Verify.mJobStart">
      <LineId Id="81" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Verify.mJobStop">
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Verify.Release">
      <LineId Id="6" Count="0" />
      <LineId Id="16" Count="1" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Verify.work">
      <LineId Id="65" Count="0" />
      <LineId Id="96" Count="1" />
      <LineId Id="99" Count="1" />
      <LineId Id="115" Count="1" />
      <LineId Id="121" Count="1" />
      <LineId Id="101" Count="4" />
      <LineId Id="107" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="45" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>