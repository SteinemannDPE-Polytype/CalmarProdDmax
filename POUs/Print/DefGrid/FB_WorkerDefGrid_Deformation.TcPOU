<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_WorkerDefGrid_Deformation" Id="{8683d501-d2f8-4b2f-9f84-75930406cf79}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_WorkerDefGrid_Deformation EXTENDS FB_WorkerDefGrid
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
  // references
  _iParamMediator : I_ParamMediator;
  
  //Worker specific configuration
  _nPrintUnitWidth            : UDINT;  // default print unit width [px]  
  _nImageWidthPx              : UDINT;  // size of the image (width)
  _nImageDepthPx              : UDINT;  // size of the image (depth)

  // - current CTs
  //_nMultiAttachedCTs          : UDINT;
  //_pMultiAttachedCTs          : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF POINTER TO FB_ContainerDefGrid;
  
  // -
  _bNewJob                    : BOOL;   // new job started 

  //Deformation status
  _nDeformationProcPoints     : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF UDINT;  // available grid points on ct
  _nDeformationProcCols       : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF UDINT;  // number of already generated grid columns
  _eDeformStep                : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF E_DeformationStep;   // status deformation of ct
  _bDeformationError          : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF BOOL;   // status deformation of ct
  _bDeformationBusy           : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF BOOL;   // status deformation of ct
  _bDeformationDone           : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF BOOL;   // status deformation of ct
  _nDeformationErrorId        : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF UDINT;  // status deformation of ct
  _tDeformationExecutionTime  : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF TIME;   // status deformation of ct
  _bAborted                   : ARRAY[nLowerIndexCTList..nUpperIndexCTList] OF BOOL;   // status deformation of ct

END_VAR

VAR PERSISTENT
  _sDeformationGridSettings  : ST_DefGridSettings := (   // grid definition settings
                                  nGridPitchX:=GVL_Deformation.nC_DefaultGridPitch_X,   // this must match the hw config (in fpga)
                                  nGridPitchY:=GVL_Deformation.nC_DefaultGridPitch_Y,   // this must match the hw config (in fpag)
                                  eDeformationType:=E_DeformationType.NoDeformation
                             );
  _fDistToCam                : LREAL := 0.02;   // distance to cam worker 
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="I_PrintStatusClient" Id="{2fd27e90-0be9-4341-a65c-36fe67a15b6f}" />
    <Method Name="Attach" Id="{a936541d-6851-4f2e-b80f-a82721b46cf9}">
      <Declaration><![CDATA[METHOD PROTECTED  Attach : BOOL
VAR_INPUT
  iCT              : I_CT;                         (*container at triggered event position*)
END_VAR
VAR
  i : UDINT;
  bDeformErr : BOOL;
  eDeformStep : E_DeformationStep;
  sCamSettings : ST_CameraGridSettings;
  pCt : POINTER TO FB_ContainerDefGrid;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF getCtInst(iCT:=iCT, pCT=>pCt) = 0 THEN    // get specific container
  RETURN;
END_IF

//-- (auto-) enable / disable worker based on mode (do before parent Attach(), is checked inside)
bWorkerEnable := _sDeformationGridSettings.eDeformationType <> E_DeformationType.NoDeformation 
                     AND SEL(pCt^.eCamMode > E_CameraMode.NoCorrection, FALSE, TRUE);


// -- Attach
IF NOT SUPER^.Attach(iCT:=iCT) THEN
  RETURN;
END_IF


// - Additional worker checks
bDeformErr := pCt^.getDeformationStatus(eDStep=>eDeformStep);   // get latest status 
  
// - deformation started? and no deformation error so far
IF bDeformErr OR eDeformStep = E_DeformationStep.nothing THEN
  Release(iCT:=iCT);  // nothing to do anymore

  // - job is valid?
ELSIF pCt^.pJob = 0 OR NOT _bJobActive THEN
  pCt^.AbortDeformation(sReason:='No valid job', Src:=_pEcSrc^);
  Release(iCT:=iCT);
  
// - did camera start?  
(*ELSIF eDeformStep < E_DeformationStep.cameraStarted THEN
  pCt^.AbortDeformation(sReason:='Prio steps did not start', Src:=_pEcSrc^);
  Release(iCT:=iCT);
*)
  
// - OK attach
ELSE
  // checks
  IF eDeformStep < E_DeformationStep.cameraStarted THEN LogWarning('Sub-optimal timing, camera did not yet start'); END_IF
  // set deformation mode
  sCamSettings := _iParamMediator.sCameraGridSettings;
  _sDeformationGridSettings.eDeformationType := sCamSettings.eDeformationType;   // apply deformation mode (for ui)
  // start deformation
  pCt^.StartDeformation(sDefGridSettings:=_sDeformationGridSettings);
  Attach := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="InitWorkerDeformation" Id="{ca5ccc6c-1e73-4750-be64-2b40d202a999}">
      <Declaration><![CDATA[METHOD InitWorkerDeformation : BOOL
VAR_INPUT
  nPrintUnitWidth : UDINT;
  iDefGridParamMediator : I_ParamMediator;
END_VAR
VAR
  i : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bInitialized THEN LogError('Base Worker not initialized! call init() before'); RETURN; END_IF
IF iDefGridParamMediator = 0 THEN bInitialized := FALSE; LogError('Invalid parameter, no valid param mediator'); RETURN; END_IF


// worker specific init
_nPrintUnitWidth := nPrintUnitWidth;
_iParamMediator := iDefGridParamMediator;
_bNewJob := FALSE;

FOR i:=nLowerIndexCTList TO nUpperIndexCTList DO
  _nDeformationProcPoints[i]     := 0;
  _nDeformationProcCols[i]       := 0;
  _eDeformStep[i]                := 0;
  _bDeformationError[i]          := 0;
  _bDeformationBusy[i]           := 0;
  _bDeformationDone[i]           := 0;
  _nDeformationErrorId[i]        := 0;
  _tDeformationExecutionTime[i]  := T#0S;
  _bAborted[i]                   := 0;
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="mJobStart" Id="{e676fb94-806c-46a7-b5f1-6dd04c7a3400}" FolderPath="I_PrintStatusClient\">
      <Declaration><![CDATA[METHOD mJobStart
VAR_INPUT
	sJobDef	: CalmarCompPrint.I_JobDefinition;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// check and init invalid settings
IF _iParamMediator = 0 THEN LogError('no parameter mediator'); RETURN; END_IF
IF _sDeformationGridSettings.nGridPitchX = 0 THEN _sDeformationGridSettings.nGridPitchX:=GVL_Deformation.nC_DefaultGridPitch_X; LogError(F_Concat2('nGridPitchX not configured, set default=', TO_STRING(GVL_Deformation.nC_DefaultGridPitch_X))); END_IF
IF _sDeformationGridSettings.nGridPitchY = 0 THEN _sDeformationGridSettings.nGridPitchY:=GVL_Deformation.nC_DefaultGridPitch_Y; LogError(F_Concat2('nGridPitchY not configured, set default=', TO_STRING(GVL_Deformation.nC_DefaultGridPitch_Y))); END_IF
IF _nPrintUnitWidth = 0 THEN LogError('_nPrintUnitWidth not configured'); END_IF
IF fPosition = 0 THEN LogError('No valid Worker position: set it to WorkerCamera.fCameraToPrintOffset + 0.05; '); END_IF

// configuration
// calculate deformation  settings
// - save image y-offset (centered)
// - save image size
_nImageWidthPx := DINT_TO_UDINT(F_MeterToSubPixel(fPosMeter:=sJobDef.fImageWidth/1000, fResoSubPx:=_fPrintResolution));
_nImageDepthPx := DINT_TO_UDINT(F_MeterToSubPixel(fPosMeter:=sJobDef.fImageDepth/1000, fResoSubPx:=_fPrintResolution));
_sDeformationGridSettings.nGridImageOffsetY := LIMIT(0, ((_nPrintUnitWidth - _nImageWidthPx)) / 2, (_nPrintUnitWidth));  // TODO: if you can get this value from PUC use the other one to have a consistent image shift value 

// - calc grid size and number of points
(*
  Use image width / depth in px divide by GridPitch in X/Y to do a ceil(always next bigger integer).
  +1 -> Because Grid starts at 0 until the calculated numbers we have one point more [0, 1, 2, 3] = 4 points (not 3) 
*)
IF _sDeformationGridSettings.nGridPitchX > 0 AND _sDeformationGridSettings.nGridPitchY > 0 THEN
  _sDeformationGridSettings.nGridSizeX := F_Ceil(val:=UDINT_TO_LREAL(_nImageDepthPx)/_sDeformationGridSettings.nGridPitchX) + 1;
  _sDeformationGridSettings.nGridSizeY := F_Ceil(val:=UDINT_TO_LREAL(_nImageWidthPx + _sDeformationGridSettings.nGridImageOffsetY)/_sDeformationGridSettings.nGridPitchY) + 1;
END_IF
_sDeformationGridSettings.nGridPoints :=  _sDeformationGridSettings.nGridSizeX * _sDeformationGridSettings.nGridSizeY;

_bJobActive := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="mJobStop" Id="{b219a4fc-0309-4cdc-a5da-ab1269df4177}" FolderPath="I_PrintStatusClient\">
      <Declaration><![CDATA[METHOD  mJobStop
VAR_INPUT
	sStatus	: CalmarCompPrint.I_JobStatus;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_bJobActive := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Release" Id="{d95ae4fb-f525-4db5-9ae6-37cc0187a3eb}">
      <Declaration><![CDATA[(*
  Release CT from Worker.
  :return: TRUE if CT was released, FALSE if no CT was registered 
*)
METHOD Release : BOOL
VAR_INPUT
  iCT              : I_CT;                         (*container at triggered event position*)
END_VAR
VAR
  i                : DINT;
  Index            : DINT;
  LowerIndex       : DINT := 1;
  pCt              : POINTER TO FB_ContainerDefGrid;
  eStep            : E_DeformationStep;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iCT = 0 OR _nAttachedCTs = 0 THEN RETURN; END_IF

// release from deformation module
IF getCtInst(iCT:=iCT, pCT=>pCt) = 0 THEN LogError('Release: could not find ct instance'); RETURN; END_IF
IF _iParamMediator <> 0 THEN
  pCt^.getDeformationStatus(eDStep => estep);
  IF estep >= E_DeformationStep.createdScriptContainer THEN
    pCt^.StopScript(iCT:=iCT);
    //_pParamMediator^.ReleaseDeformationCT(iCT:=iCT);
  END_IF
END_IF

Release := SUPER^.Release(iCT:=iCT);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="sDeformationGridSettings" Id="{a6a325bf-1bf6-4de3-a446-119ecaf0ad62}">
      <Declaration><![CDATA[PROPERTY sDeformationGridSettings : ST_DefGridSettings]]></Declaration>
      <Get Name="Get" Id="{10a87355-402f-4b61-a1a4-0e7241dc1608}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sDeformationGridSettings := _sDeformationGridSettings;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="setupPosition" Id="{1f73979b-268d-42aa-b4ea-f6f74e1b6d50}">
      <Declaration><![CDATA[METHOD setupPosition
VAR
  sCamSettings : ST_CameraGridSettings;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _pAttachedCt <> 0 THEN RETURN; END_IF    // Update only without attached container

sCamSettings := _iParamMediator.sCameraGridSettings;
fPosition := sCamSettings.fDetectToCam + _fDistToCam + _fPmPosition;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="work" Id="{9d84abdd-b080-4ea5-b34b-481b6fa9d0e0}">
      <Declaration><![CDATA[METHOD  work
VAR
  i : UDINT;
  pCT : POINTER TO FB_ContainerDefGrid;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//-----------------------------------------------------------
//NOTE: over written parent (we call AbortDeformation instead just releasing CT) SUPER^.work();    // update pos and do error releases

setupPosition();    // Worker position update

// Work only with attached container
FOR i:=nLowerIndexCTList TO nLowerIndexCTList + _nAttachedCTs - 1 DO
  pCt := _pAttachedCTList[i];
  
  // update CT position
  fCtPosition := pCt^.GetPos(nPosDomain:=E_PosDomain.master_pos) - _nTrackOffset; 
  
  // get status
  _bDeformationError[i] := pCt^.getDeformationStatus(eDStep => _eDeformStep[i], 
                            bBusy => _bDeformationBusy[i],
                            bDone => _bDeformationDone[i],
                            nErrorId => _nDeformationErrorId[i], 
                            tExecutionTime => _tDeformationExecutionTime[i],
                            bAborted => _bAborted[i]);
  _nDeformationProcPoints[i] := pCt^.nAvailableGridPoints;
  _nDeformationProcCols[i]   := pCt^.nAvailableGridCols;
     
  // Release container when all points have been processed or error
  IF _bDeformationDone[i] OR _bDeformationError[i] THEN
    // tag CT with error if deformation had an error
    IF _bDeformationError[i] THEN 
      IF NOT _bAborted[i] THEN
        pCt^.AbortDeformation(sReason:=F_Concat2('WorkerDeformation: ', EC_DefGrid.ecDefGrid_DefGridError.Desc), Src:=_pEcSrc^);
      //not needed ELSE
      //  pCt^.setError(ErrDef:=EC_DefGrid.ecDefGrid_DefGridError, Src:=_pEcSrc^);
    END_IF
    END_IF
    LogLvl(Lvl:=E_LogSeverity.Detail, Msg:=F_Concat4('Done with: CamP=',  TO_STRING(pCT^.nRegisteredCameraPoints), ' GridP=', TO_STRING(pCt^.nAvailableGridPoints)));
    Release(pCt^);

  // release CT (manually and security)
  ELSIF _bForceRelease THEN
    pCt^.AbortDeformation(sReason:='Manually realease CT', Src:=_pEcSrc^);
    Release(iCT:=_pAttachedCt^);
  
  // ! 2*SecurityReleasePosition, should work with max. 4 attached CT
  ELSIF 1.5*_fCtSecurityReleasePos > 0 AND (fCtPosition > _fCtSecurityReleasePos) THEN
    LogError(F_Concat2('Security released CTId=', TO_STRING(pCt^.pCT^.iId)));
    pCt^.AbortDeformation(sReason:='Security released CT', Src:=_pEcSrc^);
    Release(iCT:=_pAttachedCt^);
  END_IF
  
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_WorkerDefGrid_Deformation">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Deformation.Attach">
      <LineId Id="272" Count="0" />
      <LineId Id="286" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="291" Count="1" />
      <LineId Id="288" Count="1" />
      <LineId Id="293" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="269" Count="1" />
      <LineId Id="190" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="110" Count="2" />
      <LineId Id="135" Count="4" />
      <LineId Id="131" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="310" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="306" Count="0" />
      <LineId Id="305" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Deformation.InitWorkerDeformation">
      <LineId Id="9" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="33" Count="8" />
      <LineId Id="32" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Deformation.mJobStart">
      <LineId Id="45" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="90" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="84" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Deformation.mJobStop">
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Deformation.Release">
      <LineId Id="135" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="196" Count="6" />
      <LineId Id="207" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="57" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Deformation.sDeformationGridSettings.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Deformation.setupPosition">
      <LineId Id="13" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="3" Count="0" />
    </LineIds>
    <LineIds Name="FB_WorkerDefGrid_Deformation.work">
      <LineId Id="332" Count="0" />
      <LineId Id="382" Count="0" />
      <LineId Id="403" Count="0" />
      <LineId Id="402" Count="0" />
      <LineId Id="390" Count="0" />
      <LineId Id="333" Count="0" />
      <LineId Id="392" Count="1" />
      <LineId Id="341" Count="0" />
      <LineId Id="399" Count="1" />
      <LineId Id="398" Count="0" />
      <LineId Id="342" Count="26" />
      <LineId Id="384" Count="1" />
      <LineId Id="370" Count="3" />
      <LineId Id="375" Count="2" />
      <LineId Id="6" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>